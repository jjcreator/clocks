{"version":3,"sources":["clockStyles.module.css","mainStyle.module.css","navbarStyles.module.css","Clock.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","hourHandRef","useRef","minuteHandRef","secondHandRef","myClock","useState","amHour","setAmHour","Date","currentTime","setCurrentTime","styles","noAnimation","animation","setAnimation","useEffect","myInterval","setInterval","myHour","clearInterval","currentHour","getHours","timeDifference","currentMinute","getMinutes","currentSecond","getSeconds","current","style","transform","removeHandler","console","log","classList","add","disappear","remove","name","className","ref","clockFace","myDials","i","dialStyle","specialDialStyle","marginTop","specialHourStyle","thisDial","dialHand","key","dial","hourNumber","push","createDials","clockHand","hourHand","minuteHand","secondHand","clockLabel","amOrPm","onClick","smallClock","myDate","setHours","toLocaleTimeString","createDigitalTime","smallRemove","timeText","fixName","Navbar","selectEl","main","select","options","countryData","length","value","createOptions","addButton","addClock","reset","App","setCountryData","selectedTimezones","setSelectedTimezones","clocks","setClocks","offsetByIP","setOffsetByIP","spaces","RegExp","underscores","includes","replace","fetch","then","blob","json","data","utc_offset","catch","err","forEach","item","prevState","timezone","unixtime","parseInt","datetime","setTimeout","filter","duplicate","alert","placeholder","currentURL","mainStyle","clockGrid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7b4fa3cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myClock\":\"clockStyles_myClock__uW7RP\",\"appear\":\"clockStyles_appear__1LZtR\",\"disappear\":\"clockStyles_disappear__5RWWB\",\"clockFace\":\"clockStyles_clockFace__3S4T1\",\"clockHand\":\"clockStyles_clockHand__3aBvb\",\"hourHand\":\"clockStyles_hourHand__3zvCs\",\"minuteHand\":\"clockStyles_minuteHand__1W2Jd\",\"secondHand\":\"clockStyles_secondHand__3lUr7\",\"noAnimation\":\"clockStyles_noAnimation__16Scs\",\"dial\":\"clockStyles_dial__3yUAy\",\"dialHand\":\"clockStyles_dialHand__IPE90\",\"hourNumber\":\"clockStyles_hourNumber__3gwjz\",\"timeText\":\"clockStyles_timeText__3u80W\",\"clockLabel\":\"clockStyles_clockLabel__2i2uU\",\"amOrPm\":\"clockStyles_amOrPm__1cpfM\",\"remove\":\"clockStyles_remove__1CRPL\",\"smallClock\":\"clockStyles_smallClock__3SDSK\",\"smallRemove\":\"clockStyles_smallRemove__1frPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainStyle\":\"mainStyle_mainStyle__vUhtH\",\"clockGrid\":\"mainStyle_clockGrid__2wja0\",\"placeholder\":\"mainStyle_placeholder__BSDE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"navbarStyles_main__3Nq0W\",\"select\":\"navbarStyles_select__26r2M\"};","import React, {useState, useEffect, useRef} from 'react'\r\nimport styles from \"./clockStyles.module.css\"\r\n\r\nfunction Clock(props) {\r\n    const hourHandRef = useRef(null);\r\n    const minuteHandRef = useRef(null);\r\n    const secondHandRef = useRef(null);\r\n    const myClock = useRef(null);\r\n    const [amHour, setAmHour] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(new Date());\r\n    const [animation, setAnimation] = useState(styles.noAnimation);\r\n\r\n    useEffect(()=> {\r\n        const myInterval =\r\n        setInterval(()=> {\r\n            let myHour = new Date();\r\n            setCurrentTime(myHour);\r\n        }, 1000);\r\n        return function cleanup() {\r\n            clearInterval(myInterval)\r\n        }\r\n        \r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        let currentHour = currentTime.getHours();\r\n        if (props.timeDifference) {\r\n            currentHour = currentHour + props.timeDifference;\r\n        };\r\n        let currentMinute = currentTime.getMinutes();\r\n        let currentSecond = currentTime.getSeconds();\r\n        if (currentHour === 0 || currentMinute === 0 || currentSecond === 0) {\r\n            setAnimation(styles.noAnimation);\r\n        }\r\n        else {\r\n            setAnimation(\"\")}\r\n        hourHandRef.current.style.transform = `rotate(${currentHour * 30 + (currentMinute / 2) }deg)`;\r\n        minuteHandRef.current.style.transform = `rotate(${currentMinute * 6}deg)`;\r\n        secondHandRef.current.style.transform = `rotate(${currentSecond * 6}deg)`;\r\n        if (currentHour <= 11 || currentHour >= 24) {\r\n            setAmHour(true)\r\n        }\r\n        else setAmHour(false);\r\n    }, [currentTime, props.timeDifference]);\r\n\r\n    const createDials = () => {\r\n        let myDials = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            let dialStyle = {\r\n                transform: `rotate(${i *  30}deg)`,\r\n            }\r\n\r\n            let specialDialStyle = {\r\n                marginTop: \"10px\"\r\n            }\r\n\r\n            let specialHourStyle = {\r\n                transform: `rotate(-${i * 30}deg)`\r\n            }\r\n\r\n            if (i === 0 || i === 3 ||  i === 6 || i === 9) {\r\n                specialDialStyle.marginTop = \"10px\"\r\n                specialHourStyle.marginTop = \"5px\"\r\n            }\r\n            else {\r\n                specialDialStyle.marginTop = \"-10px\";\r\n                specialHourStyle.marginTop = \"10px\"  \r\n            }\r\n\r\n            // if (i === 1 || i=== 5) {\r\n            //     specialHourStyle.marginLeft = \"10px\"\r\n\r\n            // }\r\n\r\n\r\n            let thisDial = \r\n            <div className={`${styles.dialHand}`} style={dialStyle} key={i}>\r\n                <div className={styles.dial} style={specialDialStyle} key={i}>\r\n                </div>\r\n                <div className={styles.hourNumber} style={specialHourStyle} key={`${i}hour`}>{i !== 0? i: 12}</div>\r\n            </div>\r\n            myDials.push(thisDial)\r\n        }\r\n        return myDials;\r\n    }\r\n\r\n    const createDigitalTime = () => {\r\n        const myDate = new Date();\r\n        myDate.setHours(currentTime.getHours() + props.timeDifference);\r\n        return myDate.toLocaleTimeString();\r\n    }\r\n\r\n    const removeHandler = () => {\r\n        console.log(myClock.current.classList)\r\n        myClock.current.classList.add(styles.disappear)\r\n        props.remove(props.name);\r\n    }\r\n\r\n        return (\r\n        <div className = {styles.myClock} ref={myClock}>\r\n            <div className={styles.clockFace}>\r\n                {createDials()}\r\n                <div ref={hourHandRef} className={`${styles.clockHand} ${styles.hourHand} ${animation}`}/>\r\n                <div ref={minuteHandRef} className={`${styles.clockHand} ${styles.minuteHand} ${animation}`}/>\r\n                <div ref={secondHandRef} className={`${styles.clockHand} ${styles.secondHand} ${animation}`}/>\r\n                <div className={styles.clockLabel}>\r\n                    <p className={styles.amOrPm}>{amHour ? \"AM\" : \"PM\"}</p>\r\n                </div>\r\n                <div className={styles.remove} onClick={removeHandler}><div>X</div></div>          \r\n            </div>\r\n            <div className={styles.smallClock}>{createDigitalTime()}<div className={styles.smallRemove} onClick={removeHandler}>X</div></div>\r\n            <p className = {styles.timeText}>{props.fixName(props.name)}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React, {useRef} from 'react'\r\nimport styles from \"./navbarStyles.module.css\"\r\n\r\nfunction Navbar(props) {\r\n\r\n        const selectEl = useRef(null);\r\n\r\n        const createOptions = () => {\r\n            let options = [];\r\n            if (props.countryData.length === 0) {\r\n                return (<option value={\"Loading data...\"}>Loading data...</option>)\r\n            }\r\n            else {\r\n                for (let i=0; i<props.countryData.length; i++) {\r\n                    options.push(<option key={i}>{props.fixName(props.countryData[i])}</option>)\r\n                }\r\n            }\r\n            return options;\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        props.addClock(props.fixName(selectEl.current.value));\r\n    }\r\n\r\n    const resetHandler = () => {\r\n        props.reset()\r\n    }\r\n\r\n    return (\r\n        <nav className={styles.main}>\r\n            <select className={styles.select} ref={selectEl}>\r\n                {createOptions()}\r\n            </select>\r\n            <button className = {styles.addButton} onClick={clickHandler}>+</button>\r\n            <button onClick={resetHandler}>Reset</button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport styles from \"./mainStyle.module.css\"\nimport Clock from \"./Clock\";\nimport Navbar from './Navbar';\n\nfunction App() {\n\n  const [countryData, setCountryData] = useState([]);\n  const [selectedTimezones, setSelectedTimezones] = useState([]);\n  const [clocks, setClocks] = useState([]);\n  const [offsetByIP, setOffsetByIP] = useState(0);\n\n  const fixName = name => {\n    const spaces = new RegExp(\" \", \"g\");\n    const underscores = new RegExp(\"_\", \"g\");\n    return name.includes(\" \") ? name.replace(spaces, \"_\") : name.replace(underscores, \" \");\n  }\n\n  useEffect(()=> {\n    fetch(\"https://worldtimeapi.org/api/timezone\")\n      .then(blob => blob.json())\n      .then(data => {\n        setCountryData(data);\n      });\n    fetch(\"https://worldtimeapi.org/api/ip\")\n      .then(blob => blob.json())\n      .then(data => {\n        setOffsetByIP(data.utc_offset)\n      })\n      .catch(err => {\n        console.log(err + \"Failed to recognize your timezone by public IP. Setting your timezone to Poland\");\n        fetch(\"https://worldtimeapi.org/timezone/Europe/Warsaw\")\n          .then(blob => blob.json())\n          .then(data => setOffsetByIP(data.utc_offset))\n          .catch(err => console.log(err));\n      })\n  }, []);\n\n  useEffect(()=> {\n    const renderClocks = () => {\n      setClocks([]);\n      if (selectedTimezones.length !== 0) {\n        selectedTimezones.forEach(item => {\n          setClocks(prevState => [...prevState, <Clock name={item.timezone} key={item.unixtime} timeDifference={parseInt(item.utc_offset) - parseInt(offsetByIP)} remove={remove} datetime={item.datetime} fixName={fixName}/>])\n        });\n      }\n    }\n    renderClocks()\n  }, [selectedTimezones, offsetByIP])\n\n  const addClock = timezone => {\n    let duplicate = false;\n    selectedTimezones.forEach(item => {\n      if (item.timezone === timezone) {\n        alert(\"Timezone already selected\");\n        duplicate = true;\n        return;\n      }\n    });\n    if (duplicate) {\n      return;\n    }\n\n    if (selectedTimezones.length >=6) {\n      alert(\"Too many clocks\");\n      return;\n    }\n\n    setClocks(prevState => [...prevState, <div className={styles.placeholder} key={prevState.length}><span>Loading your clock...</span></div>]);\n    let currentURL = `https://worldtimeapi.org/api/timezone/${timezone}`;\n    fetch(currentURL)\n      .then(blob=>blob.json())\n      .then(data => {\n        setSelectedTimezones(prevState => [...prevState, data]);\n      }\n        );\n  }\n\n  const reset = () => {\n    setSelectedTimezones([]);\n  }\n\n  const remove = timezone => {\n    setTimeout(()=> {\n      setSelectedTimezones(prevState => prevState.filter(item => \n        item.timezone === timezone ? false : true));\n    }, 500);\n  }\n\n  return (\n    <div>\n      <Navbar countryData={countryData} addClock={addClock} reset={reset} fixName={fixName}/>\n      <div className={styles.mainStyle}>\n        <div className={styles.clockGrid}>\n          {clocks}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}